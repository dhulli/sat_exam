"""scoring fields + exam curve

Revision ID: f626981ad85f
Revises: 70443512bbdb
Create Date: 2025-08-16 00:44:57.802849

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f626981ad85f'
down_revision = '70443512bbdb'
branch_labels = None
depends_on = None


def upgrade():
    bind = op.get_bind()
    insp = sa.inspect(bind)

    # exam.curve_json (idempotent in case the previous run partially added it)
    exam_cols = {c["name"] for c in insp.get_columns("exam")}
    if "curve_json" not in exam_cols:
        with op.batch_alter_table("exam", schema=None) as batch_op:
            batch_op.add_column(sa.Column("curve_json", sa.Text(), nullable=True))

    # attempt columns (add NOT NULL with a server_default for SQLite)
    attempt_cols = {c["name"] for c in insp.get_columns("attempt")}
    with op.batch_alter_table("attempt", schema=None) as batch_op:
        if "total" not in attempt_cols:
            batch_op.add_column(
                sa.Column("total", sa.Integer(), nullable=False, server_default="0")
            )
        if "percent" not in attempt_cols:
            batch_op.add_column(sa.Column("percent", sa.Float(), nullable=True))
        if "scaled" not in attempt_cols:
            batch_op.add_column(sa.Column("scaled", sa.Integer(), nullable=True))

    # drop server default after backfill so app controls values going forward
    with op.batch_alter_table("attempt", schema=None) as batch_op:
        batch_op.alter_column("total", server_default=None)


    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('exam', schema=None) as batch_op:
        batch_op.drop_column('curve_json')

    with op.batch_alter_table('attempt', schema=None) as batch_op:
        batch_op.drop_column('scaled')
        batch_op.drop_column('percent')
        batch_op.drop_column('total')

    # ### end Alembic commands ###
